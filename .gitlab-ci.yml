stages:
  - test
  - deploy
#Définir mes variables d'environnement utilisées dans la pipeline
variables:
  DOCKER_DRIVER: overlay2 # Utilise le driver overlay2 pour Docker
  #stockage Docker qui est rapide et efficace. Docker utilise
  #différents pilotes de stockage pour gérer les images et les
  #conteneurs de Docker sur votre système Docker
  CONTAINER_IMAGE: registry.gitlab.com/greta_formation/correction_tp_nanasite
  #Cette variable est utilisée pour stocker le nom de l'image
  #Docker qui sera construite, testée et poussée vers le registre
  #Docker dans ce pipeline CI. Le nom de l'image comprend l'URL du
  #registre Docker (registry.gitlab.com), le nom du projet
  #(greta_formation/correction_tp_nanasite).
  DOCKER_USERNAME: "devyass92"
  DOCKER_PASSWORD: "DevWeb92$"
  DOCKER_REGISTRY: devyass92/dockerwgreta

test_unitaire:
  stage: test
  script:
    - php -l yassinetazit/monPremierSiteWeb_bts_sio_dynamique/pages/Global/index.php # Syntax check
    # Add additional tests here, like PHPUnit tests or functional tests

deploy_staging:
  stage: deploy
  script:
    - echo "Deploying to staging server..."
    - ssh user@staging-server 'cd /path/to/deployment/directory && git pull origin master && php artisan migrate && php artisan cache:clear'
    # Remplacez 'user' par votre nom d'utilisateur, 'staging-server' par l'adresse de votre serveur de pré-production,
    # '/path/to/deployment/directory' par le chemin absolu de votre répertoire de déploiement,
    # et ajoutez d'autres commandes de déploiement spécifiques à votre application.

deploy_production:
  stage: deploy
  script:
    - echo "Deploying to production server..."
    - ssh user@production-server 'cd /path/to/deployment/directory && git pull origin master && php artisan migrate && php artisan cache:clear && php artisan optimize && supervisorctl restart all'
    # Remplacez 'user' par votre nom d'utilisateur, 'production-server' par l'adresse de votre serveur de production,
    # '/path/to/deployment/directory' par le chemin absolu de votre répertoire de déploiement,
    # et ajoutez d'autres commandes de déploiement spécifiques à votre application.
